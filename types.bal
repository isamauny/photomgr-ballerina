// AUTO-GENERATED FILE.
// This file is auto-generated by the Ballerina OpenAPI tool.

import ballerina/constraint;
import ballerina/http;



public type picture_file_upload_body record {|
    @constraint:String {maxLength: 256, minLength: 10}
    string filename;
    @constraint:String {maxLength: 100, pattern: re `^[a-zA-Z0-9\s]*$`}
    string title;
|};

public type UserUpdateData record {|
    @constraint:String {maxLength: 68, minLength: 5, pattern: re `^\w+(?:[\-.]\w+)*@[0-9A-Za-z]+(?:[\-.][0-9A-Za-z]+)*\.(?:[A-Za-z][0-9A-Za-z]+|[0-9]+[A-Za-z][0-9A-Za-z]*)$`}
    string email;
    @constraint:String {maxLength: 30, minLength: 5, pattern: re `^[\w\s\.]{5,30}$`}
    string name;
    @constraint:Float {minValue: -50, maxValue: 1000}
    float account_balance?;
|};

public type user_login_body record {|
    @constraint:String {maxLength: 68, minLength: 5, pattern: re `^\w+(?:[\-.]\w+)*@[0-9A-Za-z]+(?:[\-.][0-9A-Za-z]+)*\.(?:[A-Za-z][0-9A-Za-z]+|[0-9]+[A-Za-z][0-9A-Za-z]*)$`}
    string user;
    @constraint:String {maxLength: 64, minLength: 8, pattern: re `^[a-zA-Z0-9&@#!?]{8,64}$`}
    string pass;
|};

# Represents the Headers record for the operation: adminallusers
public type AdminallusersHeaders record {
    string x\-access\-token;
};

public type OkConfirmationMessage record {|
    *http:Ok;
    ConfirmationMessage body;
    map<string|string[]> headers;
|};

public type UserRegistrationData record {|
    @constraint:String {maxLength: 68, minLength: 5, pattern: re `^\w+(?:[\-.]\w+)*@[0-9A-Za-z]+(?:[\-.][0-9A-Za-z]+)*\.(?:[A-Za-z][0-9A-Za-z]+|[0-9]+[A-Za-z][0-9A-Za-z]*)$`}
    string user;
    @constraint:String {maxLength: 64, minLength: 8, pattern: re `^[\w&@#!?]{8,64}$`}
    string pass;
    @constraint:String {maxLength: 30, minLength: 5, pattern: re `^[\w\s\.]{5,30}$`}
    string name;
    boolean is_admin;
    @constraint:Float {minValue: -50, maxValue: 1000}
    float account_balance;
|};

type FullUserRegistrationData record {|
    string _id ;
    *UserRegistrationData;
    string onboarding_date;
|};

public type ConfirmationMessage record {|
    @constraint:String {maxLength: 1000}
    string message?;
    @constraint:String {maxLength: 36, minLength: 36, pattern: re `^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$`}
    string _id?;
|};

public type BadContentMessage record {|
    *http:BadRequest;
    ErrorMessage body;
|};

# Represents the Headers record for the operation: userSearch
public type UserSearchHeaders record {
    string x\-access\-token;
};

# Represents the Queries record for the operation: userSearch
public type UserSearchQueries record {
    # search query ?search=xxx
    @constraint:String {maxLength: 100, pattern: re `^[\w\s\.@=]{1,100}$`}
    string search;
};

public type registerResponse record {|
    @constraint:String {maxLength: 255, minLength: 1, pattern: re `^[\w\s\.\-@:,;]{1,255}$`}
    string message;
    string? token;
    string? _id?;
|};

public type picture_upload_body record {|
    record {byte[] fileContent; string fileName;} contents?;
    @constraint:String {maxLength: 150, pattern: re `^[a-zA-Z0-9\s]*$`}
    string title?;
|};

public type UsersListItem record {|
    @constraint:String {maxLength: 36, minLength: 36, pattern: re `^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$`}
    string _id?;
    @constraint:String {maxLength: 2000, pattern: re `^(?:(?:[A-Za-z][A-Za-z0-9\-+.]*):(?:(?://(?:(?:(?:(?:[A-Za-z0-9](?:[\w\-]{0,61}[A-Za-z0-9])?)(?:\.(?:[A-Za-z0-9](?:[\w\-]{0,61}[A-Za-z0-9])?))*\.[A-Za-z]{2,})|\[[0-9A-Fa-f:]{3,48}\])(?::[1-9][0-9]{0,4})?)(?:/(?:[\w\-.~!$&'()*+,;=%@:]+(?:/[\w\-.~!$&'()*+,;=%@:]*)*)?)?|(?:/(?:[\w\-.~!$&'()*+,;=%@:]+(?:/[\w\-.~!$&'()*+,;=%@:]*)*)?)|(?:[\w\-.~!$&'()*+,;=%@:]+(?:/[\w\-.~!$&'()*+,;=%@:]*)*))?(?:\?[\w\-.~!$&'()*+,;=%@:/\?]*)?(?:#[\w\-.~!$&'()*+,;=%@:/\?]*)?)?)$`}
    string pic?;
    @constraint:String {maxLength: 68, minLength: 5, pattern: re `^\w+(?:[\-.]\w+)*@[0-9A-Za-z]+(?:[\-.][0-9A-Za-z]+)*\.(?:[A-Za-z][0-9A-Za-z]+|[0-9]+[A-Za-z][0-9A-Za-z]*)$`}
    string email;
    @constraint:String {maxLength: 50, minLength: 5, pattern: re `(^[\w\s\.]{5,50}$)`}
    string name;
    # remaining balance
    @constraint:Float {minValue: -50, maxValue: 1000}
    float account_balance?;
|};

# Provides a set of configurations for controlling the behaviours when communicating with a remote HTTP endpoint.
@display {label: "Connection Config"}
public type ConnectionConfig record {|
    # The HTTP version understood by the client
    http:HttpVersion httpVersion = http:HTTP_2_0;
    # Configurations related to HTTP/1.x protocol
    ClientHttp1Settings http1Settings?;
    # Configurations related to HTTP/2 protocol
    http:ClientHttp2Settings http2Settings?;
    # The maximum time to wait (in seconds) for a response before closing the connection
    decimal timeout = 60;
    # The choice of setting `forwarded`/`x-forwarded` header
    string forwarded = "disable";
    # Configurations associated with request pooling
    http:PoolConfiguration poolConfig?;
    # HTTP caching related configurations
    http:CacheConfig cache?;
    # Specifies the way of handling compression (`accept-encoding`) header
    http:Compression compression = http:COMPRESSION_AUTO;
    # Configurations associated with the behaviour of the Circuit Breaker
    http:CircuitBreakerConfig circuitBreaker?;
    # Configurations associated with retrying
    http:RetryConfig retryConfig?;
    # Configurations associated with inbound response size limits
    http:ResponseLimitConfigs responseLimits?;
    # SSL/TLS-related options
    http:ClientSecureSocket secureSocket?;
    # Proxy server related options
    http:ProxyConfig proxy?;
    # Enables the inbound payload validation functionality which provided by the constraint package. Enabled by default
    boolean validation = true;
|};

public type AcceptedErrorMessage record {|
    *http:Accepted;
    ErrorMessage body;
    map<string|string[]> headers;
|};

# 403 response
public type AuthenticationError record {|
    boolean success;
    @constraint:String {maxLength: 255, minLength: 1, pattern: re `^[\w\s\.\-@:,;]{1,255}$`}
    string message;
|};

public type UnprocessableEntityErrorMessage record {|
    *http:UnprocessableEntity;
    ErrorMessage body;
    map<string|string[]> headers;
|};

# Represents the Headers record for the operation: edituserinfo
public type EdituserinfoHeaders record {
    string x\-access\-token;
};

# Proxy server configurations to be used with the HTTP client endpoint.
public type ProxyConfig record {|
    # Host name of the proxy server
    string host = "";
    # Proxy server port
    int port = 0;
    # Proxy server username
    string userName = "";
    # Proxy server password
    @display {label: "", kind: "password"}
    string password = "";
|};

public type UsersItem record {|
    @constraint:String {maxLength: 36, minLength: 36, pattern: re `^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$`}
    string _id;
    @constraint:String {maxLength: 68, minLength: 5, pattern: re `^\w+(?:[\-.]\w+)*@[0-9A-Za-z]+(?:[\-.][0-9A-Za-z]+)*\.(?:[A-Za-z][0-9A-Za-z]+|[0-9]+[A-Za-z][0-9A-Za-z]*)$`}
    string user;
    @constraint:String {maxLength: 64, minLength: 8, pattern: re `^[\w&@#!?]{8,64}$`}
    string pass;
    @constraint:String {maxLength: 50, minLength: 5, pattern: re `(^[\w\s\.]{5,50}$)`}
    string name;
    # is admin
    boolean is_admin;
    # remaining balance
    @constraint:Float {minValue: -50, maxValue: 1000}
    float account_balance;
    @constraint:String {maxLength: 38, minLength: 20, pattern: re `^[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):[0-5][0-9]:(?:[0-5][0-9]|60)(?:\.[0-9]{1,15})?(?:Z|[+\-](?:[01][0-9]|2[0-3]):[0-5][0-9])$`}
    string onboarding_date?;
|};

# Pictures owned by a user
@constraint:Array {maxLength: 100}
public type PicturesList PicturesList_inner[];

public type OkRegistrationMessage record {|
    *http:Created;
    registerResponse body;
    map<string|string[]> headers;
|};

public type ForbiddenAuthenticationError record {|
    *http:Forbidden;
    AuthenticationError body;
    map<string|string[]> headers;
|};

# Provides settings related to HTTP/1.x protocol.
public type ClientHttp1Settings record {|
    # Specifies whether to reuse a connection for multiple requests
    http:KeepAlive keepAlive = http:KEEPALIVE_AUTO;
    # The chunking behaviour of the request
    http:Chunking chunking = http:CHUNKING_AUTO;
    # Proxy server related options
    ProxyConfig proxy?;
|};

public type inline_response_200_1 record {|
    @constraint:String {maxLength: 255, minLength: 1, pattern: re `^[\w\s\.\-@:,;]{1,255}$`}
    string message?;
    string? token?;
    string? _id?;
|};

public type inline_response_200_2 record {|
    string message?;
|};

public type OkInline_response_200_1 record {|
    *http:Ok;
    inline_response_200_1 body;
    map<string|string[]> headers;
|};

public type inline_response_200_3 record {|
    @constraint:String {maxLength: 100}
    string message;
|};

public type PicturesList_inner record {|
    @constraint:String {maxLength: 36, minLength: 36, pattern: re `^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$`}
    string _id;
    @constraint:String {maxLength: 100}
    string title;
    @constraint:String {maxLength: 254}
    string image_url?;
    @constraint:String {maxLength: 100}
    string name?;
    @constraint:String {maxLength: 100}
    string filename;
    @constraint:String {maxLength: 100}
    string description?;
    @constraint:String {maxLength: 36, minLength: 36, pattern: re `^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$`}
    string creator_id;
    int money_made?;
    int likes?;
    @constraint:String {maxLength: 38, minLength: 20, pattern: re `^[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):[0-5][0-9]:(?:[0-5][0-9]|60)(?:\.[0-9]{1,15})?(?:Z|[+\-](?:[01][0-9]|2[0-3]):[0-5][0-9])$`}
    string created_date;
|};

public type ErrorMessage record {|
    @constraint:String {maxLength: 255, minLength: 1, pattern: re `^[\w\s\.\-@:,;]{1,255}$`}
    string message;
|};

# Provides API key configurations needed when communicating with a remote HTTP endpoint.
public type ApiKeysConfig record {|
    # Most operations need to pass a user token retrieved calling /api/login
    @display {label: "", kind: "password"}
    string x\-access\-token;
|};
